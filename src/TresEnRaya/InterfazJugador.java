/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package TresEnRaya;

import java.io.IOException;
import java.net.Socket;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JTextArea;
import javax.swing.JTextField;


/**
 *
 * @author lukep
 */
public class InterfazJugador extends javax.swing.JFrame implements Runnable{
    //numero de jugador
    private int numJugador;
    
    //miTurno
    private Turno miTurno;
    //comunicacion con el juego
    private Comunicaciones comunications;
    //comunicacion con el chat
    private Comunicaciones comChat;
    //movimiento a enviar
    private Movimiento movimiento;
    //Imagenes
    private final ImageIcon imageX = new ImageIcon("src/imagenes/equis.png");
    private final ImageIcon imageY = new ImageIcon("src/imagenes/circle.png");
    private final ImageIcon empty = new ImageIcon("src/imagenes/empty.png");
    /**
     * Creates new form Jugador
     */
    
    //METODO CONSTRUCTOR
    public InterfazJugador() {
        initComponents();
        jTextField1.setEditable(false);
        jTextField2.setEditable(false);
        jTextField4.setEditable(false);
        jTextField5.setEditable(false);
        
        //inicializo el turno a 0.
        miTurno = new Turno(0);
    }


    public void setComunications(Comunicaciones comunications) {
        this.comunications = comunications;
    }

    public void setComChat(Comunicaciones comChat) {
        this.comChat = comChat;
    }
    
    

    public void setNumJugador(int numJugador) {
        this.numJugador = numJugador;
    }
    
    public void setTurno(Turno miTurno){
        this.miTurno = miTurno;
    }
    
    public void cerrarChat(){
        try {
            comChat.socketClose();

            
        } catch (IOException ex) {
            Logger.getLogger(InterfazJugador.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public ImageIcon getEmpty() {
        return empty;
    }
    
    
    
    
    //funcion que crea un socket
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jTextField3 = new javax.swing.JTextField();
        jButton10 = new javax.swing.JButton();
        jTextField4 = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jTextField5 = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();

        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        jLabel1.setText("PLAYER");

        jLabel2.setText("TURNO");

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        jButton10.setText("SEND");
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });

        jLabel3.setText("NAME");

        jLabel4.setText("OPPONENT");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(87, 87, 87)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel1)
                                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 290, Short.MAX_VALUE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel3)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(83, 83, 83))))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(0, 0, Short.MAX_VALUE)
                                        .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jTextField3))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton10)))
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(41, 41, 41)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jTextField2)
                            .addComponent(jButton8, javax.swing.GroupLayout.DEFAULT_SIZE, 74, Short.MAX_VALUE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(jButton9, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel4)
                                .addGap(167, 167, 167))))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(33, 33, 33)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, 73, Short.MAX_VALUE)
                            .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, 73, Short.MAX_VALUE)
                            .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton9, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jScrollPane1))
                .addGap(53, 53, 53)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel4)
                    .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton10))
                .addContainerGap(38, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        //si es mi turno
        if(miTurno.getTurno() == numJugador){
            //si la posicion no esta ocupada- lo compruebo aqui y asi evito trafico innecesario con el server
            if(jButton1.getIcon() == null || jButton1.getIcon() == empty){
                if(numJugador == 1){
                    //inserto la imagen
                    jButton1.setIcon(imageX);
                    //cambio el turno
                    miTurno.setTurno(2);
                   jTextField2.setText("PLAYER 2");
                }else if(numJugador == 2){
                    jButton1.setIcon(imageY);
                    miTurno.setTurno(1);
                    jTextField2.setText("PLAYER 1");
                }
                
                //envio el movimiento al servidor
                enviarMovimiento(0,0);
            }else{
                JOptionPane.showMessageDialog(this, "Posicion ocupada");
            }
        }else{
            JOptionPane.showMessageDialog(this, "No es tu turno");
        }
        
        //esre proceso el mismo para el resto de los botones

    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        if(miTurno.getTurno() == numJugador){
            if(jButton2.getIcon() == null || jButton2.getIcon() == empty){
                if(numJugador == 1){
                   jButton2.setIcon(imageX);
                   miTurno.setTurno(2);
                   jTextField2.setText("PLAYER 2");
                }else if(numJugador == 2){
                   jButton2.setIcon(imageY);
                   miTurno.setTurno(1);
                   jTextField2.setText("PLAYER 1");
                }
               enviarMovimiento(0,1);
            }else{
               JOptionPane.showMessageDialog(this, "Posicion ocupada");
            }
        }else{
           JOptionPane.showMessageDialog(this, "No es tu turno");
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        if(miTurno.getTurno() == numJugador){
            if(jButton3.getIcon() == null || jButton3.getIcon() == empty){
                if(numJugador == 1){
                    jButton3.setIcon(imageX);
                   miTurno.setTurno(2);
                   jTextField2.setText("PLAYER 2");

                }else if(numJugador == 2){
                    jButton3.setIcon(imageY);
                    miTurno.setTurno(1);
                   jTextField2.setText("PLAYER 1");
                }

                  enviarMovimiento(0,2);
            }else{
                JOptionPane.showMessageDialog(this, "Posicion ocupada");
            }
        }else{
            JOptionPane.showMessageDialog(this, "No es tu turno");
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        if(miTurno.getTurno() == numJugador){
            if(jButton4.getIcon() == null || jButton4.getIcon() == empty){
              
                if(numJugador == 1){
                    jButton4.setIcon(imageX);
                    miTurno.setTurno(2);
                   jTextField2.setText("PLAYER 2");
                }else if(numJugador == 2){
                    jButton4.setIcon(imageY);
                    miTurno.setTurno(1);
                   jTextField2.setText("PLAYER 1");
                }
                 enviarMovimiento(1,0);
            }else{
                JOptionPane.showMessageDialog(this, "Posicion ocupada");
            }
        }else{
            JOptionPane.showMessageDialog(this, "No es tu turno");
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
         if(miTurno.getTurno() == numJugador){
            if(jButton5.getIcon() == null || jButton5.getIcon() == empty){
                if(numJugador == 1){
                    jButton5.setIcon(imageX);
                    miTurno.setTurno(2);
                    jTextField2.setText("PLAYER 2");
                }else if(numJugador == 2){
                    jButton5.setIcon(imageY);
                    miTurno.setTurno(1);
                   jTextField2.setText("PLAYER 1");
                }
                enviarMovimiento(1,1);
            }else{
                JOptionPane.showMessageDialog(this, "Posicion ocupada");
            }
         }else{
             JOptionPane.showMessageDialog(this, "No es tu turno");
         }
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
        if(miTurno.getTurno() == numJugador){
            if(jButton6.getIcon() == null || jButton6.getIcon() == empty){
                if(numJugador == 1){
                   jButton6.setIcon(imageX);
                   miTurno.setTurno(2);
                   jTextField2.setText("PLAYER 2");
                }else if(numJugador == 2){
                   jButton6.setIcon(imageY);
                   miTurno.setTurno(1);
                   jTextField2.setText("PLAYER 1");

                }
                enviarMovimiento(1,2);
            }else{
               JOptionPane.showMessageDialog(this, "Posicion ocupada");
            }
         }else{
             JOptionPane.showMessageDialog(this, "No es tu turno");
         }
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        // TODO add your handling code here:
         if(miTurno.getTurno() == numJugador){
            if(jButton7.getIcon() == null || jButton7.getIcon() == empty){
                if(numJugador == 1){
                   jButton7.setIcon(imageX);
                   miTurno.setTurno(2);
                   jTextField2.setText("PLAYER 2");
                }else if(numJugador == 2){
                   jButton7.setIcon(imageY);
                    miTurno.setTurno(1);
                   jTextField2.setText("PLAYER 1");
                }
                enviarMovimiento(2,0);
            }else{
                JOptionPane.showMessageDialog(this, "Posicion ocupada");
            }
         }else{
             JOptionPane.showMessageDialog(this, "No es tu turno");
         }
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        // TODO add your handling code here
         if(miTurno.getTurno() == numJugador){
            if(jButton8.getIcon() == null || jButton8.getIcon() == empty){
                if(numJugador == 1){
                   jButton8.setIcon(imageX);
                   miTurno.setTurno(2);
                   jTextField2.setText("PLAYER 2");
                }else if(numJugador == 2){
                   jButton8.setIcon(imageY);
                   miTurno.setTurno(1);
                   jTextField2.setText("PLAYER 1");
                }
                enviarMovimiento(2,1);
            }else{
               JOptionPane.showMessageDialog(this, "Posicion ocupada");
            }
         }else{
             JOptionPane.showMessageDialog(this, "No es tu turno");
         }
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        // TODO add your handling code here:
         if(miTurno.getTurno() == numJugador){
            if(jButton9.getIcon() == null || jButton9.getIcon() == empty){
                if(numJugador == 1){
                   jButton9.setIcon(imageX);
                   miTurno.setTurno(2);
                   jTextField2.setText("PLAYER 2");
                }else if(numJugador == 2){
                   jButton9.setIcon(imageY);
                   miTurno.setTurno(1); 
                   jTextField2.setText("PLAYER 1");
                }
                enviarMovimiento(2,2);
            }else{
               JOptionPane.showMessageDialog(this, "Posicion ocupada");
            }
        }else{
             JOptionPane.showMessageDialog(this, "No es tu turno");
         }
    }//GEN-LAST:event_jButton9ActionPerformed

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
        // TODO add your handling code here:
        
        //cogo el mensaje a enviar
        String msg = jTextField4.getText()+": "+jTextField3.getText();
        
        //lo envio al servidor del chat
        enviarChat(msg);
        jTextField3.setText(" ");
        
    }//GEN-LAST:event_jButton10ActionPerformed
    
    public void enviarChat(String msg){
        try {
            //envio un mensaje a traves de las comunicaciones del chat
            comChat.sendMsg(msg);
        } catch (IOException ex) {
            Logger.getLogger(InterfazJugador.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    public void enviarMovimiento(int fila, int columna){
        try {
             movimiento = new Movimiento(fila,columna);
            //envio un movimiento a traves de las comunicaciones con el juego
            comunications.sendMovement(movimiento);
            
            
        } catch (IOException ex) {
            Logger.getLogger(InterfazJugador.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public JButton getjButton1() {
        return jButton1;
    }

    public JButton getjButton2() {
        return jButton2;
    }

    public JButton getjButton3() {
        return jButton3;
    }

    public JButton getjButton4() {
        return jButton4;
    }

    public JButton getjButton5() {
        return jButton5;
    }

    public JButton getjButton6() {
        return jButton6;
    }

    public JButton getjButton7() {
        return jButton7;
    }

    public JButton getjButton8() {
        return jButton8;
    }

    public JButton getjButton9() {
        return jButton9;
    }

    public JLabel getjLabel1() {
        return jLabel1;
    }

    public JLabel getjLabel2() {
        return jLabel2;
    }

    public JTextField getjTextField1() {
        return jTextField1;
    }

    public JTextField getjTextField2() {
        return jTextField2;
    }

    public JButton getjButton10() {
        return jButton10;
    }

    public void setjButton10(JButton jButton10) {
        this.jButton10 = jButton10;
    }

    public JTextArea getjTextArea1() {
        return jTextArea1;
    }

    public void setjTextArea1(JTextArea jTextArea1) {
        this.jTextArea1 = jTextArea1;
    }

    public JTextField getjTextField3() {
        return jTextField3;
    }

    public void setjTextField3(JTextField jTextField3) {
        this.jTextField3 = jTextField3;
    }

    public JTextField getjTextField4() {
        return jTextField4;
    }

    public void setjTextField4(JTextField jTextField4) {
        this.jTextField4 = jTextField4;
    }

    public JTextField getjTextField5() {
        return jTextField5;
    }

    public void setjTextField5(JTextField jTextField5) {
        this.jTextField5 = jTextField5;
    }
    
    
    public void cerrarComunicaciones(){
        try {
            comChat.socketClose();
        } catch (IOException ex) {
            Logger.getLogger(InterfazJugador.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField5;
    // End of variables declaration//GEN-END:variables
    
    //hilo que esta esperando recibir mensajes de otros jugadores a traves del chat
    @Override
    public void run() {
       try {
           //variable de final
           boolean finish = false;
           //mientras no sea final
            while(finish == false){
                
                //espero recibir un mensaje
               String msg = comChat.receiveMsg();
               //si recibo protocol cierre de conexion cierrp las conexiones
               /*Vease que este mensaje no creara conflicto con ningun otro
               ya que los mensajes que envia un jugador llevan nombre: mensaje
               con lo que no habra confusiones
               */
               if("PROTOCOL CIERRE CONEXION".equals(msg)){
                   //es el final
                   finish = true;
               }else{
                   //si no meto el mensaje en el chat
                    jTextArea1.append("\n"+ msg);
               }
           }
            //cierro la conexion.
           comChat.socketClose();
       } catch (IOException ex) {
           try {
               //si pasa algo extraño tambien cierro la conexion.
               comChat.socketClose();
           } catch (IOException ex1) {
               Logger.getLogger(InterfazJugador.class.getName()).log(Level.SEVERE, null, ex1);
           }
       } catch (ClassNotFoundException ex) {
           
       }
       
    }


 

}
